----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  E:\alex\nsaids-covid-research\analysis\arthritis_log_sens4\04_an_descriptive_table.log
  log type:  text
 opened on:  15 Jul 2020, 14:14:51

. 
. * Open Stata dataset
. use $tempdir\analysis_dataset, clear

. 
. /*==============================================================================*/
. 
. /* PROGRAMS TO AUTOMATE TABULATIONS===========================================*/ 
. 
. ********************************************************************************
. * All below code from K Baskharan 
. * Generic code to output one row of table
. 
. cap prog drop generaterow

. program define generaterow
  1. syntax, variable(varname) condition(string) 
  2.         
.         qui count
  3.         local overalldenom=r(N)
  4. 
.         qui tab `variable' exposure, matcell(T)
  5.         m: T=st_matrix("T")
  6.         m: T=(T:+(10:*(T:==0)))
  7.         m: st_numscalar("checkmin", min(T) )
  8. 
.         if checkmin>0 & checkmin<=5 {
  9.             
.         qui sum `variable' if `variable' `condition'
 10.         file write tablecontent (r(max)) _tab       
 11.         file write tablecontent %9.0gc ("redacted") (" (") %3.1f (.) (")") _tab
 12.         file write tablecontent %9.0gc ("redacted") (" (") %3.1f (.) (")") _tab
 13.         file write tablecontent %9.0gc ("redacted") (" (") %3.1f (.) (")") _n               
 14.         }
 15.         
.         else {
 16.             
.         qui sum `variable' if `variable' `condition'
 17.         file write tablecontent (r(max)) _tab
 18.         
.         qui cou if `variable' `condition'
 19.         local rowdenom = r(N)
 20.         local colpct = 100*(r(N)/`overalldenom')
 21.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct') (")") _tab
 22.         
.         qui cou if exposure == 0
 23.         local rowdenom = r(N)
 24.         qui cou if exposure == 0 & `variable' `condition'
 25.         local pct = 100*(r(N)/`rowdenom')
 26.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") _tab
 27.         
.         qui cou if exposure == 1 
 28.         local rowdenom = r(N)
 29.         qui cou if exposure == 1 & `variable' `condition'
 30.         local pct = 100*(r(N)/`rowdenom')
 31.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") _n
 32.         }
 33.         
. end

. 
. /* Explanatory Notes 
> 
> defines a program (SAS macro/R function equivalent), generate row
> the syntax row specifies two inputs for the program: 
> 
>         a VARNAME which is your variable 
>         a CONDITION which is a string of some condition you impose 
> 
> Note: Check each cell of the table after tab variable exposure and see if any of them is >0 and <=5 (stored in matrix)
> if so, the output will be redacted
> if not, the output will be:
>         
> the program counts if variable and condition and returns the counts
> column percentages are then automatically generated
> this is then written to the text file 'tablecontent' 
> the number followed by space, brackets, formatted pct, end bracket and then tab
> 
> the format %3.1f specifies length of 3, followed by 1 dp. 
> 
> */ 
. 
. ********************************************************************************
. * Generic code to output one section (varible) within table (calls above)
. 
. cap prog drop tabulatevariable

. prog define tabulatevariable
  1. syntax, variable(varname) min(real) max(real) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow, variable(`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow, variable(`variable') condition(">=.")
  8. 
. end

. 
. ********************************************************************************
. 
. /* Explanatory Notes 
> 
> defines program tabulate variable 
> syntax is : 
> 
>         - a VARNAME which you stick in variable 
>         - a numeric minimum 
>         - a numeric maximum 
>         - optional missing option, default value is . 
> 
> forvalues lowest to highest of the variable, manually set for each var
> run the generate row program for the level of the variable 
> if there is a missing specified, then run the generate row for missing vals
> 
> */ 
. 
. ********************************************************************************
. * Generic code to summarise a continuous variable 
. 
. cap prog drop summarizevariable 

. prog define summarizevariable
  1. syntax, variable(varname) 
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4.         
.         qui summarize `variable', d
  5.         file write tablecontent ("Median (IQR)") _tab 
  6.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
  7.                                                         
.         qui summarize `variable' if exposure == 0, d
  8.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
  9. 
.         qui summarize `variable' if exposure == 1, d
 10.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _n
 11.         
.         qui summarize `variable', d
 12.         file write tablecontent ("Min, Max") _tab 
 13.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 14.                                                         
.         qui summarize `variable' if exposure == 0, d
 15.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 16. 
.         qui summarize `variable' if exposure == 1, d
 17.         file write tablecontent (r(min)) (", ") (r(max)) ("") _n
 18.         
. end

. 
. 
. /* INVOKE PROGRAMS FOR TABLE 1================================================*/ 
. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using ./$outdir/table1.txt, write text replace

. 
. file write tablecontent ("Table 1: Demographic and Clinical Characteristics - $population") _n

. 
. * Exposure labelled columns
. 
. local lab0: label exposure 0

. local lab1: label exposure 1

. 
. file write tablecontent _tab ("Total")                                                    _tab ///
>                                                          ("`lab0'")                                                   _tab ///
>                                                          ("`lab1'")                                               _n

. 
. * DEMOGRAPHICS (more than one level, potentially missing) 
. 
. gen byte cons=1

. tabulatevariable, variable(cons) min(1) max(1) 

. file write tablecontent _n 

. 
. tabulatevariable, variable(agegroup) min(1) max(6) 

. file write tablecontent _n 

. 
. tabulatevariable, variable(male) min(0) max(1) 

. file write tablecontent _n 

. 
. tabulatevariable, variable(bmicat) min(1) max(6) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(smoke) min(1) max(3) missing 

. file write tablecontent _n 

. 
. tabulatevariable, variable(smoke_nomiss) min(1) max(3) missing 

. file write tablecontent _n 

. 
. tabulatevariable, variable(ethnicity) min(1) max(5) missing 

. file write tablecontent _n 

. 
. tabulatevariable, variable(imd) min(1) max(5) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(diabcat) min(1) max(4) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(diab_control) min(1) max(3) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(arthritis_type) min(0) max(3) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(hypertension) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(heart_failure) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(other_heart_disease) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(diabetes) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(copd) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(other_respiratory) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(cancer) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(immunodef_any) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(ckd) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(osteoarthritis) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(rheumatoid) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(flu_vaccine) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(pneumococcal_vaccine) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(statin) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(ppi) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(steroid_prednisolone) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(hydroxychloroquine) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(dmards_primary_care) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(gp_consult) min(0) max(1) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(aande_attendance_last_year) min(0) max(1) missing

. file write tablecontent _n 

. 
. file write tablecontent _n _n

. 
. * COMORBIDITIES (continuous)
. 
. summarizevariable, variable(gp_consult_count)

. summarizevariable, variable(age)

. summarizevariable, variable(aande_attendance_count)

. summarizevariable, variable(follow_up_ons)

. *summarizevariable, variable(follow_up_ecds)
. 
. file close tablecontent

. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  E:\alex\nsaids-covid-research\analysis\arthritis_log_sens4\04_an_descriptive_table.log
  log type:  text
 closed on:  15 Jul 2020, 14:16:54
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
