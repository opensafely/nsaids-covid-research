------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  E:\alex\nsaids-covid-research\analysis\arthritis_log\04b_an_descriptive_table_arthritis.log
  log type:  text
 opened on:   3 Jul 2020, 11:09:37

. 
. * Open Stata dataset
. use $tempdir\analysis_dataset, clear

. 
. /*==============================================================================*/
. 
. /* PROGRAMS TO AUTOMATE TABULATIONS===========================================*/ 
. 
. ********************************************************************************
. * All below code from K Baskharan 
. * Generic code to output one row of table
. 
. cap prog drop generaterow

. program define generaterow
  1. syntax, variable(varname) condition(string) 
  2.         
.         cou
  3.         local overalldenom=r(N)
  4.         
.         qui sum `variable' if `variable' `condition'
  5.         file write tablecontent (r(max)) _tab
  6.         
.         cou if `variable' `condition'
  7.         local rowdenom = r(N)
  8.         local colpct = 100*(r(N)/`overalldenom')
  9.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct') (")") _tab
 10. 
.         cou if exposure == 0 
 11.         local rowdenom = r(N)
 12.         cou if exposure == 0 & `variable' `condition'
 13.         local pct = 100*(r(N)/`rowdenom') 
 14.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _tab
 15. 
.         cou if exposure == 1 
 16.         local rowdenom = r(N)
 17.         cou if exposure == 1 & `variable' `condition'
 18.         local pct = 100*(r(N)/`rowdenom')
 19.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") _n
 20.         
. end

. 
. /* Explanatory Notes 
> 
> defines a program (SAS macro/R function equivalent), generate row
> the syntax row specifies two inputs for the program: 
> 
>         a VARNAME which is your variable 
>         a CONDITION which is a string of some condition you impose 
>         
> the program counts if variable and condition and returns the counts
> column percentages are then automatically generated
> this is then written to the text file 'tablecontent' 
> the number followed by space, brackets, formatted pct, end bracket and then tab
> 
> the format %3.1f specifies length of 3, followed by 1 dp. 
> 
> */ 
. 
. ********************************************************************************
. * Generic code to output one section (varible) within table (calls above)
. 
. cap prog drop tabulatevariable

. prog define tabulatevariable
  1. syntax, variable(varname) min(real) max(real) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow, variable(`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow, variable(`variable') condition(">=.")
  8. 
. end

. 
. ********************************************************************************
. 
. /* Explanatory Notes 
> 
> defines program tabulate variable 
> syntax is : 
> 
>         - a VARNAME which you stick in variable 
>         - a numeric minimum 
>         - a numeric maximum 
>         - optional missing option, default value is . 
> 
> forvalues lowest to highest of the variable, manually set for each var
> run the generate row program for the level of the variable 
> if there is a missing specified, then run the generate row for missing vals
> 
> */ 
. 
. ********************************************************************************
. * Generic code to summarise a continuous variable 
. 
. cap prog drop summarizevariable 

. prog define summarizevariable
  1. syntax, variable(varname) 
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4.         
.         qui summarize `variable', d
  5.         file write tablecontent ("Median (IQR)") _tab 
  6.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
  7.                                                         
.         qui summarize `variable' if exposure == 0, d
  8.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _tab
  9. 
.         qui summarize `variable' if exposure == 1, d
 10.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) (")") _n
 11.         
.         qui summarize `variable', d
 12.         file write tablecontent ("Min, Max") _tab 
 13.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 14.                                                         
.         qui summarize `variable' if exposure == 0, d
 15.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 16. 
.         qui summarize `variable' if exposure == 1, d
 17.         file write tablecontent (r(min)) (", ") (r(max)) ("") _n
 18.         
. end

. 
. /* QUESTION FOR STATA REVIEWER - I WROTE THIS CONTINOUS VAR SUMMARY PROGRAM
> but I don't quite understand why I seem to need ("") on the last row for the 
> maxium value to display properly? Otherwise it seems to just be missing. 
> 
> Please check this extra carefully as well
> 
> */ 
. 
. /* INVOKE PROGRAMS FOR TABLE 1================================================*/ 
. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using ./$outdir/table1.txt, write text replace
(note: file ./arthritis_output/table1.txt not found)

. 
. file write tablecontent ("Table 1: Demographic and Clinical Characteristics - $population") _n

. 
. * Exposure labelled columns
. 
. local lab0: label exposure 0

. local lab1: label exposure 1

. 
. file write tablecontent _tab ("Total")                                                    _tab ///
>                                                          ("`lab0'")                                                   _tab ///
>                                                          ("`lab1'")                                               _n

. 
. * DEMOGRAPHICS (more than one level, potentially missing) 
. 
. gen byte cons=1

. tabulatevariable, variable(cons) min(1) max(1) 
  561,849
  561,849
  0
  0
  561,849
  561,849

. file write tablecontent _n 

. 
. tabulatevariable, variable(agegroup) min(1) max(6) 
  561,849
  15,857
  0
  0
  561,849
  15,857
  561,849
  50,553
  0
  0
  561,849
  50,553
  561,849
  140,014
  0
  0
  561,849
  140,014
  561,849
  171,896
  0
  0
  561,849
  171,896
  561,849
  135,846
  0
  0
  561,849
  135,846
  561,849
  47,683
  0
  0
  561,849
  47,683

. file write tablecontent _n 

. 
. tabulatevariable, variable(male) min(0) max(1) 
  561,849
  349,830
  0
  0
  561,849
  349,830
  561,849
  212,019
  0
  0
  561,849
  212,019

. file write tablecontent _n 

. 
. tabulatevariable, variable(bmicat) min(1) max(6) missing
  561,849
  4,383
  0
  0
  561,849
  4,383
  561,849
  112,732
  0
  0
  561,849
  112,732
  561,849
  186,525
  0
  0
  561,849
  186,525
  561,849
  125,127
  0
  0
  561,849
  125,127
  561,849
  56,542
  0
  0
  561,849
  56,542
  561,849
  30,766
  0
  0
  561,849
  30,766
  561,849
  45,774
  0
  0
  561,849
  45,774

. file write tablecontent _n 

. 
. tabulatevariable, variable(smoke) min(1) max(3) missing 
  561,849
  234,271
  0
  0
  561,849
  234,271
  561,849
  252,734
  0
  0
  561,849
  252,734
  561,849
  73,867
  0
  0
  561,849
  73,867
  561,849
  977
  0
  0
  561,849
  977

. file write tablecontent _n 

. 
. tabulatevariable, variable(smoke_nomiss) min(1) max(3) missing 
  561,849
  235,248
  0
  0
  561,849
  235,248
  561,849
  252,734
  0
  0
  561,849
  252,734
  561,849
  73,867
  0
  0
  561,849
  73,867
  561,849
  0
  0
  0
  561,849
  0

. file write tablecontent _n 

. 
. tabulatevariable, variable(ethnicity) min(1) max(5) missing 
  561,849
  394,412
  0
  0
  561,849
  394,412
  561,849
  2,962
  0
  0
  561,849
  2,962
  561,849
  26,935
  0
  0
  561,849
  26,935
  561,849
  8,320
  0
  0
  561,849
  8,320
  561,849
  4,689
  0
  0
  561,849
  4,689
  561,849
  124,531
  0
  0
  561,849
  124,531

. file write tablecontent _n 

. 
. tabulatevariable, variable(imd) min(1) max(5) missing
  561,849
  113,677
  0
  0
  561,849
  113,677
  561,849
  112,361
  0
  0
  561,849
  112,361
  561,849
  112,819
  0
  0
  561,849
  112,819
  561,849
  111,061
  0
  0
  561,849
  111,061
  561,849
  111,931
  0
  0
  561,849
  111,931
  561,849
  0
  0
  0
  561,849
  0

. file write tablecontent _n 

. 
. tabulatevariable, variable(diabcat) min(1) max(4) missing
  561,849
  476,668
  0
  0
  561,849
  476,668
  561,849
  63,152
  0
  0
  561,849
  63,152
  561,849
  20,731
  0
  0
  561,849
  20,731
  561,849
  1,298
  0
  0
  561,849
  1,298
  561,849
  0
  0
  0
  561,849
  0

. file write tablecontent _n 

. 
. tabulatevariable, variable(arthritis_type) min(0) max(3) missing
  561,849
  0
  0
  0
  561,849
  0
  561,849
  30,211
  0
  0
  561,849
  30,211
  561,849
  511,804
  0
  0
  561,849
  511,804
  561,849
  19,834
  0
  0
  561,849
  19,834
  561,849
  0
  0
  0
  561,849
  0

. file write tablecontent _n 

. 
. file write tablecontent _n _n

. 
. ** COMORBIDITIES (categorical and continous)
. 
. ** COMORBIDITIES (binary)
. 
. foreach comorb of varlist       hypertension                                    ///
>                                                         heart_failure                                   ///
>                                                         other_heart_disease                             ///
>                                                         diabetes                                                ///
>                                                         copd                                                    ///
>                                                         other_respiratory                   ///
>                                                         cancer                                          ///
>                                                         immunodef_any                                   ///
>                                                         ckd                                                             ///
>                             osteoarthritis                  ///                                                 
>                                                         rheumatoid                      ///
>                                                         flu_vaccine                                     ///
>                                                         pneumococcal_vaccine                    ///
>                                                         statin                                                  ///
>                                                         ppi                                                     ///
>                                                         steroid_prednisolone            ///
>                                                         hydroxychloroquine              ///
>                                                         dmards_primary_care             ///
>                                                         gp_consult                      ///
>                                                         aande_attendance_last_year   {
  2. 
. local lab: variable label `comorb'
  3. file write tablecontent ("`lab'") _n 
  4.                                                         
. generaterow, variable(`comorb') condition("==1")
  5. file write tablecontent _n
  6. 
. }
  561,849
  208,192
  0
  0
  561,849
  208,192
  561,849
  6,428
  0
  0
  561,849
  6,428
  561,849
  14,525
  0
  0
  561,849
  14,525
  561,849
  85,181
  0
  0
  561,849
  85,181
  561,849
  27,370
  0
  0
  561,849
  27,370
  561,849
  11,199
  0
  0
  561,849
  11,199
  561,849
  53,891
  0
  0
  561,849
  53,891
  561,849
  6,129
  0
  0
  561,849
  6,129
  561,849
  39,418
  0
  0
  561,849
  39,418
  561,849
  531,638
  0
  0
  561,849
  531,638
  561,849
  50,045
  0
  0
  561,849
  50,045
  561,849
  269,445
  0
  0
  561,849
  269,445
  561,849
  75,118
  0
  0
  561,849
  75,118
  561,849
  144,321
  0
  0
  561,849
  144,321
  561,849
  240,654
  0
  0
  561,849
  240,654
  561,849
  24,282
  0
  0
  561,849
  24,282
  561,849
  10,933
  0
  0
  561,849
  10,933
  561,849
  27,132
  0
  0
  561,849
  27,132
  561,849
  540,534
  0
  0
  561,849
  540,534
  561,849
  104,710
  0
  0
  561,849
  104,710

. 
. * COMORBIDITIES (continuous)
. 
. summarizevariable, variable(gp_consult_count)

. summarizevariable, variable(age)

. summarizevariable, variable(aande_attendance_count)

. summarizevariable, variable(follow_up_ons)

. *summarizevariable, variable(follow_up_ecds)
. 
. file close tablecontent

. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  E:\alex\nsaids-covid-research\analysis\arthritis_log\04b_an_descriptive_table_arthritis.log
  log type:  text
 closed on:   3 Jul 2020, 11:09:56
------------------------------------------------------------------------------------------------------------------------------------------------
